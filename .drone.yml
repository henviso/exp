kind: pipeline
type: docker
name: build

steps:
- name: test
  image: golang:1.12.5-stretch
  commands:
  - go test -v

- name: build
  image: golang:1.12.5-stretch
  commands:
  - go mod download
  - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags "-static"' -o release/kongdesk .
  - echo -n "latest,$${DRONE_COMMIT}" > .tags
  - "[ -z \"$$DRONE_TAG\" ] && echo \"No release tag found\" || echo -n \",$$DRONE_TAG\" >> .tags"
  when:
    event:
    - push

- name: publish
  image: plugins/docker
  settings:
    dockerfile: Dockerfile
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: kongdesk/web
  when:
    event:
    - push
---
kind: pipline
type: exec
name: deploy

platform:
  os: linux
  arch: amd64

steps:
- name: deploy
  environment:
    DOCKER_USERNAME:
      from_secret: docker_username
    DOCKER_PASSWORD:
      from_secret: docker_password
  commands:
  - "docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD"
  - "docker stack deploy -c docker-compose.yml exp"

depends_on:
- build